@model ArchitectureTemplate.Mvc.Models.LoginModel
@{
    ViewBag.Title = "Edit Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="white-row">
    <h3>
        <strong>Edit Password</strong>
    </h3>

    <div class="alert alert-info">
        <i class="fa fa-info-circle"></i>
        <strong>How is it works?</strong>
        <p>
            Your new password must have...
        </p>
    </div>

    @using (Html.BeginForm("EditPassword", "Login", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.HttpMethodOverride(HttpVerbs.Put)
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new {@class = "col-sm-3 control-label"})
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control", @placeholder = "Enter your current password", @required = "required"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, new {@class = "col-sm-3 control-label"})
            <div class="col-sm-9">
                @Html.EditorFor(model => model.NewPassword, new {htmlAttributes = new {@class = "form-control", @placeholder = "Enter your new password", @required = "required"}})
                @Html.ValidationMessageFor(model => model.NewPassword, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new {@class = "col-sm-3 control-label"})
            <div class="col-sm-9">
                @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control", @placeholder = "Confirm your new password", @required = "required"}})
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-primary pull-right btn-specific">
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}